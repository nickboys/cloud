spring.application.name=web
server.port=8084
eureka.client.serviceUrl.defaultZone=http://localhost:8082/eureka/

#Mysql
spring.datasource.url=jdbc:mysql://172.16.4.51:3306/fileuplod?characterEncoding=UTF-8
spring.datasource.username=fileuplodmgr
spring.datasource.password=2018fileup#@lodmgr
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
## 初始化大小，最小，最大
#spring.datasource.initialSize=10
#spring.datasource.minIdle=10
#spring.datasource.maxActive=50
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

spring.jpa.database=MYSQL
# 显示后台处理的SQL语句
spring.jpa.show-sql=true
# 自动检查实体和数据库表是否一致，如果不一致则会进行更新数据库表
spring.jpa.hibernate.ddl-auto=update

#log
logging.level.org.springframework.web=info
logging.level.org.hibernate=error

